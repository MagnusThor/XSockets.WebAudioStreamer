<!DOCTYPE html>
<html>
<head>
    <title>XSockets.NET - WebAudio streaming binary data</title>
    <style>
        audio {
            position: absolute;
            bottom: 10px;
            right: 10px;
        }

        li {
            color: #337ab7;
        }

        #log {
            max-height: 300px;
            overflow: auto;
            min-height: 300px;
        }
    </style>
</head>
<body>
    <h1>XSockets.NET - WebAudio streaming binary data</h1>
    <hr />
    Select song ( Click to start)
    <ul id="songs"></ul>
    <hr />
    <h5>Message log</h5>
    <div id="log"></div>
    <hr />
    <audio id="aud" autoplay controls></audio>
    <script src="/Scripts/XSockets.latest.js"></script>
    <script src="/Scripts/MediaSourceChunksPlayer.js"></script>
    <script>

        function $(selector, el) {
            if (!el) {
                el = document;
            }
            return el.querySelector(selector);
        }
        var logToScreen = function (what) {
            var p = document.createElement("p");
            p.innerText = JSON.stringify(what);
            $("#log").appendChild(p);
        };

        var ws;
        var audiostream;
        var player;
        var interval;
        var bytesRead = 0;

        document.addEventListener("DOMContentLoaded", function () {
            //Connect to XSockets
            ws = new XSockets.WebSocket("ws://localhost:4502", ["audiostream"]);

            ws.onconnected = function () {
                logToScreen("connected");
            };
            ws.onerror = function (err) {
                logToScreen(err);
            };
            ws.ondisconnected = function () {
                logToScreen("disconnected");
            }

            //Get the audiostream controller
            audiostream = ws.controller("audiostream");

            //When a song is loaded start getting chunks for that song every 1500 ms
            audiostream.on("songloaded", function (song) {                
                player = new MediaSourceChunksPlayer("#aud");
                logToScreen(song);
                interval = window.setInterval(function () {
                    audiostream.invoke("getChunk"); // ask for a new chunk each second
                }, 1000);
            });

            //When the controller is open
            audiostream.onopen = function (ci) {
                logToScreen(ci);
                //Get all available songs and add them to the UI
                audiostream.on("songs", function (songs) {
                    logToScreen(songs);
                    songs.forEach(function (song) {
                        var li = document.createElement("li");
                        console.log(li);
                        li.setAttribute("data-song", song);
                        li.innerText = song;

                        $("#songs").appendChild(li);
                        li.addEventListener("click", function () {
                            window.clearInterval(interval);
                            var song = this.getAttribute("data-song");                            
                            audiostream.invoke("getSong", { name: song });                            
                        });
                    });
                });
                audiostream.invoke("getSongs");
            };
            //A chunk arrived, add it to the player. If last chunk... Stop interval and do not fetch more chunks
            audiostream.on("chunk", function (message) {
                logToScreen(message.data);
                if (message.data.final) window.clearInterval(interval);
                player.addChunk(message.binary.buffer);
            });
        });

    </script>
</body>
</html>

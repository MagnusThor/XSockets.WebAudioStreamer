<!DOCTYPE html>
<html>
<head>
    <title>XVA XSockets.NET - BinaryMessages, WebAudio steaming chunk playback</title>
    <style>
        audio {
            position: absolute;
            bottom: 10px;
            right: 10px;
        }
        li {
            color:#337ab7
        }

        #log {
            max-height: 300px;
            overflow: auto;
            min-height: 300px;
        }
        mark {
           position: absolute;
            top: 10px;
            right: 10px;
        }
    </style>
</head>
    <body>
        <mark>More great C64 remixes found on - remix.kwed.org</mark>
        <h1>XVA XSockets.NET - BinaryMessages, WebAudio steaming chunk playback</h1>
        <hr/>
        Select song ( Click to start)
        <ul id="songs">
        
        </ul>
        <hr/>
        <h5>Message log</h5>
        <div id="log"></div>
        <hr/>
        <audio id="aud" autoplay controls></audio>
        <script src="~/Scripts/XSockets.latest.js"></script>
        <script src="~/Scripts/cplayer.js"></script>
        <script>

            function $(selector, el) {
                if (!el) {
                    el = document;
                }
                return el.querySelector(selector);
            }
            var logToScreen = function(what) {
                var p = document.createElement("p");
                p.innerText = JSON.stringify(what);
                $("#log").appendChild(p);
            };

            var ws;
            var audiostream;
            var player;
            var interval;
            var bytesRead = 0;

            document.addEventListener("DOMContentLoaded", function () {
      
          
           
                ws = new XSockets.WebSocket("ws://" + location.hostname + ":" + location.port, ["audiostream"]);

                ws.onconnected = function () {
                    logToScreen("connected");
                };
                ws.onerror = function (err) {
                    logToScreen(err);
                };
                ws.ondisconnected = function () {
                    logToScreen("disconnected");
                }

                audiostream = ws.controller("audiostream");


                audiostream.on("songloaded", function(song) {
                    // start get the chunks

                    player = new MediaSourceChunksPlayer("#aud");


                    logToScreen(song);
                    interval = window.setInterval(function () {
                        audiostream.invoke("getChunk"); // ask for a new chunk each 1.5 seconds
                    }, 1500);
                });

                audiostream.onopen = function (ci) {
                    logToScreen(ci);


                    audiostream.on("songs", function (songs) {
                        logToScreen(songs);
                        songs.forEach(function(song) {
                            var li = document.createElement("li");
                            console.log(li);
                            li.setAttribute("data-song", song);
                            li.innerText = song;
                       
                            $("#songs").appendChild(li);
                            li.addEventListener("click", function () {
                                window.clearInterval(interval);
                                var song = this.getAttribute("data-song");
                                // interval = window.setInterval(function () {
                                audiostream.invoke("getSong", { name: song }); // ask for a new chunk
                                //  }, 1500);

                            });
                        });
                    });
                    audiostream.invoke("getSongs");

                };
                audiostream.on("chunk", function (message) {
                    logToScreen(message.data);
                    if (message.data.final) window.clearInterval(interval);
                    player.addChunk(message.binary.buffer);
                });
            });

      
       
      

 
        </script>
    </body>
</html>
